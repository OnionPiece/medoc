*********
泛ACL问题
*********

只是一些零散的想法:

  1. 对于HTTP/HTTPS访问流量，haproxy是支持ACL来过滤流量的，以达到建议黑白名单的目的。但目前没有做，无论是集群外侧的负载均衡，还是处于集群边界上的Router Pod。
  
  2. 对于TCP访问流量，haproxy也支持通过ACL来做黑白名单。但这样只能在集群外侧的负载均衡上做。
  
  3. 无论是TCP还是HTTP/HTTPS，我们提供的方式都只暴露了集群外侧的负载均衡，因此合法的访问必从入口进来，不会出现直接流量从集群节点直接“翻墙”进来的情况。但是对于非法手段，例如通过某种嗅探方式获取到集群某一节点的IP，那么业务访问流量是存在“翻墙”风险的。可以通过iptables防火墙，来做业务流量的来源过滤。
  
  4. 不同namespace是隔离的，但如果有不同namespace需要互通的情况，就需要“打通”两个namespace，而这以为着全通，即两个namespace之间彼此任意的Pod，Service都是通的，而不仅仅是需要互通的部分才能通。
  
  5. 同样的，在同一个namespace中，也是全通的，你无法做到在namespace内的Pod分组，例如A和B通，C和D通，但A和C，还有B和D不通。 这个问题，和4有些类似，社区的ovs-networkpolicy plug-in 似乎就是为这个目标实现的。
  
  6. 相比较于物理服务器，将集群部署在IaaS平台的虚机上会得到一些好处:
  
    - 集群的流量入口更好控制，可以做到无“翻墙”
    - 虚机这一层具备“节点“间的ACL，配合K8S label，例如将web, app, db等放在不同的”节点“，理论上是可以实现对容器流量方向上的控制，例如同一个项目下，web只能访问app，db只能被app访问
  
    但这样做的话，会拉长我们的技术栈，就目前的人力资源来看，不建议这样做。
