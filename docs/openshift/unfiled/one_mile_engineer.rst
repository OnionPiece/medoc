*****************
One Mile Engineer
*****************

什么是"One Mile Engineer"
=========================

我们不生产代码，我们只是代码成果的搬运工。

对于向K8S以及OpenShift这样有大厂主推的较成熟的开源项目，我们可能很难再向里面提交代码，来推动项目本身的发展建设。而在另一方面，这样的平台性质的项目一般都会有如何落地的问题，更别提这个平台更多的面向应用。因此，如何将这个平台搬运到客户实际的环境中，以及如何将用户的服务搬运到容器上，就成了我们需要解决的最后一公里的问题。一公里工程师，一头面对的是最终用户，无论是环境部署的用户，还是在平台部署应用的用户，另一头面对的是OpenShift/K8S以及其他所有相关社区项目。

One Mile Engineer的修炼
=======================

我们虽然不直接生产代码，但是却需要比生产代码更全面的知识体系，技术储备，并且这种知识和技术是全栈的。

全栈式的修炼可能有以下点用于参考：

  1. 会用OpenShift/K8S，能够不断积累应用部署的case，针对一些场景需求，能够向下查看OpenShift/K8S的功能支持
  2. 更多的了解OpenShift/K8S能够提供哪些功能和技术支持，能够想象到哪些功能在什么样的场景下有使用价值，反之亦然
  3. 能够通过竞品分析，了解到不同厂商提供的功能是面向什么的，是由哪些原生功能提供支持的，对于可能自研的功能，能够进行猜想
  4. 了解OpenShift/K8S在某些方向上的技术实现原理，并且有一定的OpenShift/K8S代码阅读
  5. 对于底层模块的集成，组件的拼接，了解接口规范，了解一两个插件的技术原理
  6. 对于整体平台的运维，有一定了解，知道有哪些有价值的调优参数，以及集群维护性指标
